"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[776],{1832:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"guides/node-operators/validators/vfn-setup","title":"VFN Setup","description":"Note:","source":"@site/docs/guides/node-operators/validators/vfn-setup.md","sourceDirName":"guides/node-operators/validators","slug":"/guides/node-operators/validators/vfn-setup","permalink":"/guides/node-operators/validators/vfn-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/guides/node-operators/validators/vfn-setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"0L Sybil Resistance","permalink":"/guides/node-operators/validators/sybil-resistance"},"next":{"title":"Running a node with docker","permalink":"/guides/node-operators/validators/with-docker-setup"}}');var o=i(4848),a=i(8453);const t={},s="VFN Setup",l={},d=[{value:"Ports",id:"ports",level:2},{value:"Cleanup",id:"cleanup",level:3},{value:"VFN initialization",id:"vfn-initialization",level:3},{value:"Issue the On-Chain Configuration",id:"issue-the-on-chain-configuration",level:3},{value:"Run the VFN",id:"run-the-vfn",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"vfn-setup",children:"VFN Setup"})}),"\n",(0,o.jsx)(n.p,{children:"Note:\nWe strongly suggest that all validators also run a VFN, which is a node that serves as crucial counterpart to completing the design of our network. The VFN is how the public network is able to reach the validator, which should not be done directly."}),"\n",(0,o.jsx)(n.h2,{id:"ports",children:"Ports"}),"\n",(0,o.jsxs)(n.p,{children:["The following ports must be open: ",(0,o.jsx)(n.code,{children:"6181"}),", ",(0,o.jsx)(n.code,{children:"6182"}),", ",(0,o.jsx)(n.code,{children:"8080"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6181"}),' is for the private validator fullnode network ("VFN"), it should only allow traffic from the Validator node IP address above.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6182"})," is for the the PUBLIC fullnode network. This is how the public nodes that will be serving JSON-RPC on the network will receive data and submit transactions to the network."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"8080"})," is the RPC port and we suggest VFNs and public fullnodes to serve this port by default for operability."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"cleanup",children:"Cleanup"}),"\n",(0,o.jsxs)(n.p,{children:["Previous clones and testnets leave data in the ",(0,o.jsx)(n.code,{children:".libra"})," directory, clean those up by removing these directories"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"rm -rf ~/libra-framework\nrm -rf ~/.libra/data && rm -rf ~/.libra/genesis && rm -rf ~/.libra/secure-data.json\nrm -f /usr/bin/libra && rm -rf /usr/local/bin/libra && rm -f ~/.cargo/bin/libra\n"})}),"\n",(0,o.jsx)(n.p,{children:"Clone libra-framework and build"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd ~\ngit clone https://github.com/0LNetworkCommunity/libra-framework\n\ncd ~/libra-framework\nbash ./util/dev_setup.sh -bt\n. ~/.bashrc\n\ncd ~/libra-framework\ncargo build --release -p libra -p diem-db-tool -p diem\n"})}),"\n",(0,o.jsx)(n.p,{children:"Make sure your path to libra is global and persistent"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo cp -f ~/libra-framework/target/release/libra* ~/.cargo/bin/\n"})}),"\n",(0,o.jsx)(n.h3,{id:"vfn-initialization",children:"VFN initialization"}),"\n",(0,o.jsxs)(n.p,{children:["Initialize ",(0,o.jsx)(n.code,{children:"~/.libra"})," config directory"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"libra config init\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Grab the ",(0,o.jsx)(n.strong,{children:"genesis blob"})," and ",(0,o.jsx)(n.strong,{children:"waypoint"})," (creates ",(0,o.jsx)(n.code,{children:"fullnode.yaml"})," not used here)"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"libra config fullnode-init\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"warning",children:[(0,o.jsxs)(n.p,{children:["Until a patch is published to pull correctly from the ",(0,o.jsx)(n.code,{children:"epoch-archive-mainnet"})," repo, the ",(0,o.jsx)(n.code,{children:"genesis.blob"})," and ",(0,o.jsx)(n.code,{children:"waypoint.txt"})," will be wrong if you are using ",(0,o.jsx)(n.code,{children:"libra config fullnode-init"}),".\nIn order to fix this, after you have run the above command, please run:"]}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"wget https://raw.githubusercontent.com/0LNetworkCommunity/epoch-archive-mainnet/main/upgrades/v6.9.0/genesis.blob -O ~/.libra/genesis/genesis.blob"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"wget https://raw.githubusercontent.com/0LNetworkCommunity/epoch-archive-mainnet/main/upgrades/v6.9.0/waypoint.txt -O ~/.libra/genesis/waypoint.txt"})}),"\n"]})]}),"\n",(0,o.jsxs)(n.p,{children:["Set your client ",(0,o.jsx)(n.code,{children:"libra.yaml"})," with the rpc-load-balancer upstream node"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"libra config fix --force-url https://rpc.openlibra.space:8080\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["If you notice problems getting transactions through, or when the RPC Load Balancer is down, you can adjust the url to ",(0,o.jsx)(n.code,{children:'"http://localhost:8080/"'})," in ",(0,o.jsx)(n.code,{children:"~/.libra/libra.yaml"})]})}),"\n",(0,o.jsx)(n.p,{children:"Configure your VFN using the validator config tool"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"libra config validator-init --vfn\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["Due to a bug currently in ",(0,o.jsx)(n.code,{children:"libra config validator-init"}),", please run this command again without the ",(0,o.jsx)(n.code,{children:"--vfn"})," parameter"]})}),"\n",(0,o.jsx)(n.p,{children:"The VFN config will then be automatically created here"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cat ~/.libra/vfn.yaml\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This is what your VFN ",(0,o.jsx)(n.code,{children:"full_node_networks"})," section should look like:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"full_node_networks:\n- network_id:\n    private: 'vfn'\n  discovery_method: 'onchain'\n  listen_address: '/ip4/0.0.0.0/tcp/6181'\n  seeds:\n    <your_validator_publickey>:\n      addresses:\n      - '/ip4/<validator_ip>/tcp/6181/noise-ik/<0x_your_validator_publickey>/handshake/0'\n      role: 'Validator'\n- network_id: 'public'\n  discovery_method: 'onchain'\n  listen_address: '/ip4/0.0.0.0/tcp/6182'\n  identity:\n    type: 'from_file'\n    path: '/home/<your_user>/.libra/validator-full-node-identity.yaml'\n"})}),"\n",(0,o.jsx)(n.p,{children:"Note:\nYour VFN will use your validator as an upstream without an identity, while the public network will use the identity file."}),"\n",(0,o.jsx)(n.h3,{id:"issue-the-on-chain-configuration",children:"Issue the On-Chain Configuration"}),"\n",(0,o.jsx)(n.p,{children:"From your VFN, take note of the public IPv4 address"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl ipinfo.io\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Take note of your ",(0,o.jsx)(n.code,{children:"full_node_network_public_key"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'grep full_node_network_public_key ~/.libra/public-keys.yaml\n\n# example: full_node_network_public_key: "0x_full_node_network_public_key"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["On both machines, the config in ",(0,o.jsx)(n.code,{children:"operator.yaml"})," should be complete with separate Validator and VFN keys and IPs"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'validator_network_public_key: "0xthiswasalreadysetpublickey"\nvalidator_host:\n  host: <validator_ip>\n  port: 6180\nfull_node_network_public_key: "0x_full_node_network_public_key"\nfull_node_host:\n  host: <vfn_ip>\n  port: 6182\n'})}),"\n",(0,o.jsx)(n.p,{children:"On your Validator, update the on-chain config for the VN/VFN (do this just once)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"libra txs validator update\n\nEnter your 0L mnemonic:\n\ud83d\udd11\ntransaction success  \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7 \u2713\n"})}),"\n",(0,o.jsx)(n.p,{children:"Wait (up until one epoch) and then check the on-chain values to confirm"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"libra query val-config 0xabc4321yourvalidatoraccount | jq\n"})}),"\n",(0,o.jsx)(n.h3,{id:"run-the-vfn",children:"Run the VFN"}),"\n",(0,o.jsxs)(n.p,{children:["In a tmux, run the following command:\n",(0,o.jsx)(n.code,{children:"libra node --config-path ~/.libra/vfn.yaml"})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>s});var r=i(6540);const o={},a=r.createContext(o);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);