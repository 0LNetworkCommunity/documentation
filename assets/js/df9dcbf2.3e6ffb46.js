"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[3077],{6700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"guides/node-operators/validators/register","title":"Validator registration","description":"Welcome! This documentation covers validator registration. Start with Setting up a validator documentation if needed.","source":"@site/docs/guides/node-operators/validators/register.md","sourceDirName":"guides/node-operators/validators","slug":"/guides/node-operators/validators/register","permalink":"/guides/node-operators/validators/register","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/guides/node-operators/validators/register.md","tags":[],"version":"current","lastUpdatedAt":1748360406000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Network Health","permalink":"/guides/node-operators/validators/network-health"},"next":{"title":"Rescue Missions","permalink":"/guides/node-operators/validators/rescue"}}');var o=n(4848),i=n(8453);const r={},s="Validator registration",d={},l=[{value:"Detailed instructions",id:"detailed-instructions",level:2},{value:"Generate a new account - Get Keys",id:"generate-a-new-account---get-keys",level:3},{value:"Get the account on chain",id:"get-the-account-on-chain",level:3},{value:"Update upstream node",id:"update-upstream-node",level:3},{value:"Submit configs to chain",id:"submit-configs-to-chain",level:3},{value:"Get Vouches",id:"get-vouches",level:3},{value:"Bid to be in the validator set",id:"bid-to-be-in-the-validator-set",level:3},{value:"Run the node as fullnode and then validator mode",id:"run-the-node-as-fullnode-and-then-validator-mode",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"validator-registration",children:"Validator registration"})}),"\n",(0,o.jsxs)(t.p,{children:["Welcome! This documentation covers validator registration. Start with ",(0,o.jsx)(t.strong,{children:"Setting up a validator"})," documentation if needed."]}),"\n",(0,o.jsx)(t.h2,{id:"detailed-instructions",children:"Detailed instructions"}),"\n",(0,o.jsx)(t.h3,{id:"generate-a-new-account---get-keys",children:"Generate a new account - Get Keys"}),"\n",(0,o.jsx)(t.p,{children:"If you don't already have an account, you will need a mnemonic (seed), to generate all keys."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"libra wallet keygen\n"})}),"\n",(0,o.jsx)(t.h3,{id:"get-the-account-on-chain",children:"Get the account on chain"}),"\n",(0,o.jsx)(t.p,{children:"Someone needs to create that account onchain first.\nAsk someone to deposit a coin to your account from step #1"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"# friend sends one coin to your account which creates it\nlibra txs transfer -t <YOUR ACCOUNT> -a 1\n"})}),"\n",(0,o.jsx)(t.h3,{id:"update-upstream-node",children:"Update upstream node"}),"\n",(0,o.jsxs)(t.p,{children:["Set your client ",(0,o.jsx)(t.code,{children:"libra.yaml"})," with the rpc-load-balancer upstream node"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"libra config fix --fullnode-url https://rpc.openlibra.space:8080\n"})}),"\n",(0,o.jsx)(t.h3,{id:"submit-configs-to-chain",children:"Submit configs to chain"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"# Submit your account on chain, which takes the default location to your ~/.libra/operator.yaml\nlibra txs validator register\n\n# Or you can use the -f option to provide the exact path to your operator.yaml file\nlibra txs validator register -f ~/.libra/operator.yaml\n"})}),"\n",(0,o.jsx)(t.h3,{id:"get-vouches",children:"Get Vouches"}),"\n",(0,o.jsx)(t.p,{children:"0L Network uses very light reputation games to keep the validator set trusted.\nJust ask an existing validator for a vouch. It helps a lot if you share your node specs and a little bit of your experience with them."}),"\n",(0,o.jsx)(t.p,{children:"Your friend will:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"libra txs validator vouch --vouch-for <YOUR ADDRESS>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"bid-to-be-in-the-validator-set",children:"Bid to be in the validator set"}),"\n",(0,o.jsx)(t.p,{children:"0L Network uses Proof-of-Fee for sybil resistance, instead of Proof-of-Stake. You don't need any stake to join, but you just need to be able to bid on how much you are willing to pay to be in the validator set. The cheapest bid proposed by validators will be actually what all validators pay (uniform price auction)."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"libra txs validator pof --net-reward <NET REWARD> --bid-pct <PERCENT YOU PAY> --epoch-expiry <WHEN EXPIRES>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"run-the-node-as-fullnode-and-then-validator-mode",children:"Run the node as fullnode and then validator mode"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Once your validator enters the set you will need to stop running as a fullnode and run as a validator."}),"\n",(0,o.jsxs)(t.li,{children:["When your node is in the active set, it is time to change your node config path to point to the ",(0,o.jsx)(t.code,{children:"validator.yaml"}),"."]}),"\n",(0,o.jsx)(t.li,{children:"Stop your node and run in the validator mode:"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"libra node --config-path ~/.libra/validator.yaml\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(6540);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);