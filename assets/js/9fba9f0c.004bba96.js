"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[3175],{1429:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"guides/node-operators/validators/governance-tx","title":"Governance Transactions","description":"Updating system state under consensus","source":"@site/docs/guides/node-operators/validators/governance-tx.md","sourceDirName":"guides/node-operators/validators","slug":"/guides/node-operators/validators/governance-tx","permalink":"/guides/node-operators/validators/governance-tx","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/guides/node-operators/validators/governance-tx.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Setting up a Validator","permalink":"/guides/node-operators/validators/detailed-instructions"},"next":{"title":"Network Hot Upgrades","permalink":"/guides/node-operators/validators/hot-upgrades"}}');var t=n(4848),a=n(8453);const s={},i="Governance Transactions",l={},d=[{value:"Create a Upgrade Script",id:"create-a-upgrade-script",level:2},{value:"Create Template Script",id:"create-template-script",level:2},{value:"Prepare Script",id:"prepare-script",level:2},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Script",id:"script",level:3},{value:"Before",id:"before",level:4},{value:"After",id:"after",level:4},{value:"Example: Governance Mode",id:"example-governance-mode",level:3},{value:"Compile",id:"compile",level:2},{value:"Submit Proposal",id:"submit-proposal",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"governance-transactions",children:"Governance Transactions"})}),"\n",(0,t.jsx)(r.p,{children:"Updating system state under consensus"}),"\n",(0,t.jsx)(r.h2,{id:"create-a-upgrade-script",children:"Create a Upgrade Script"}),"\n",(0,t.jsx)(r.p,{children:"Sometimes we would like to adjust parameters of the network and not upgrade the underlying frameworks. For this we need to prepare and write an upgrade script."}),"\n",(0,t.jsxs)(r.p,{children:["Note: this requires you have the ",(0,t.jsx)(r.code,{children:"libra"})," cli tool built locally."]}),"\n",(0,t.jsx)(r.h2,{id:"create-template-script",children:"Create Template Script"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"libra move framework governance --script-dir <Script Dir>  --framework-local-dir ~/libra-framework/framework/ --only-make-template"})}),"\n",(0,t.jsx)(r.h2,{id:"prepare-script",children:"Prepare Script"}),"\n",(0,t.jsxs)(r.p,{children:["You will want to name the folders appropriately. We will use ",(0,t.jsx)(r.code,{children:"UP-0002"})," as an example. In actual historical example we wanted to change the nominal consensus reward due to a migration error at v7.0.0."]}),"\n",(0,t.jsx)(r.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["up-002","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["sources","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"patch_nominal_reward_migration_error.move"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"script",children:"Script"}),"\n",(0,t.jsxs)(r.p,{children:["By default it prepares a ",(0,t.jsx)(r.code,{children:"multi_step_proposal"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["Note: you may notice the requirement of script hash is different from framework ",(0,t.jsx)(r.code,{children:"hot upgrades"}),". Here  will just produce an empty vector (as opposed to a chain of hashes as is done in multi-step upgrades)."]}),"\n",(0,t.jsx)(r.h4,{id:"before",children:"Before"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"script {\n  // THIS IS A TEMPLATE GOVERNANCE SCRIPT\n  // you can generate this file with commandline tools:\n  // `libra move framework governance --script-dir --framework-local-dir`\n  use diem_framework::diem_governance;\n  use std::vector;\n\n  fun main(proposal_id: u64){\n      let next_hash = vector::empty();\n      let _framework_signer = diem_governance::resolve_multi_step_proposal(proposal_id, @0000000000000000000000000000000000000000000000000000000000000001, next_hash);\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h4,{id:"after",children:"After"}),"\n",(0,t.jsxs)(r.p,{children:["Make changes to the template. Here is an example of changing some on chain state for the ",(0,t.jsx)(r.code,{children:"ol_framework::proof_of_fee"})," module"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"script {\n\n  use diem_framework::diem_governance;\n  use ol_framework::proof_of_fee;\n\n  fun main(proposal_id: u64){\n      let framework_signer = diem_governance::resolve_multi_step_proposal(\n          proposal_id,\n          @0000000000000000000000000000000000000000000000000000000000000001,\n          vector[],\n      );\n      // Set the nominal_reward to the value prior to v7.0.1 hard fork\n      proof_of_fee::genesis_migrate_reward(&framework_signer, 178204815);\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"example-governance-mode",children:"Example: Governance Mode"}),"\n",(0,t.jsx)(r.p,{children:'Here\'s an example script of how the validators can enter "Governance Mode" where coin transfers are disabled during governance upgrades and events.'}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"\nscript {\n  // Enter Governance Mode, and disable coin transactions\n  use diem_framework::diem_governance;\n  use ol_framework::ol_features_constants;\n  use std::features;\n  use std::vector;\n\n\n  fun main(proposal_id: u64){\n      let next_hash = vector::empty();\n      let _framework_signer = diem_governance::resolve_multi_step_proposal(proposal_id, @0000000000000000000000000000000000000000000000000000000000000001, next_hash);\n      // set governance mode\n      let gov_mode_id = ol_features_constants::get_governance_mode();\n      features::change_feature_flags(&framework_sig, vector::singleton(gov_mode_id), vector::empty());\n\n      // TO EXIT GOVERNANCE MODE REVERSE THE VECTORS:\n      // features::change_feature_flags(&framework_sig, vector::empty(), vector::singleton(gov_mode_id));\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"compile",children:"Compile"}),"\n",(0,t.jsx)(r.p,{children:"Proposers of the admin transaction must compile. Voters should be encouraged to also compile the transaction to confirm the build artifacts."}),"\n",(0,t.jsxs)(r.p,{children:["If for example your script is at ",(0,t.jsx)(r.code,{children:"proposals/up-00016/1-exit-gov-mode"})]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["IMPORTANT: modify the Move.toml at ",(0,t.jsx)(r.code,{children:"proposals/up-00016/1-exit-gov-mode/Move.toml"}),", to include the full path to the OL libra-framework source code."]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"# in <script-dir>/Move.toml\n\n[dependencies.LibraFramework]\n# DEVS: this must be the fully qualified path to the Libra Framework\nlocal = '<PATH/TO/YOUR/libra-framework/framework/libra-framework'\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsx)(r.li,{children:"Compile the script"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"# from this (the 'upgrades' project) root dir\nlibra move framework governance --script-dir ./proposals/up-0016/1-exit-gov-mode  --framework-local-dir <PATH/TO/YOUR/SOURCE/libra-framework/framework\n"})}),"\n",(0,t.jsx)(r.h2,{id:"submit-proposal",children:"Submit Proposal"}),"\n",(0,t.jsxs)(r.p,{children:["Sending, getting consensus, and resolving a Governance Tx proposal follows the same steps as a framework Hot Upgrade.\nFollow instructions ",(0,t.jsx)(r.a,{href:"/guides/node-operators/validators/hot-upgrades",children:"here"})]})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var o=n(6540);const t={},a=o.createContext(t);function s(e){const r=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:r},e.children)}}}]);