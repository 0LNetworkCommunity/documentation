"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[2161],{1702:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"cli-tools/txs/generate-transaction","title":"Txs - Generate Transaction","description":"Interact with Move Code","source":"@site/docs/cli-tools/txs/generate-transaction.md","sourceDirName":"cli-tools/txs","slug":"/cli-tools/txs/generate-transaction","permalink":"/cli-tools/txs/generate-transaction","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/cli-tools/txs/generate-transaction.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"Interact with Move Code"},"sidebar":"tutorialSidebar","previous":{"title":"Node","permalink":"/cli-tools/node/"},"next":{"title":"Txs - Transfer","permalink":"/cli-tools/txs/transfer"}}');var i=t(4848),r=t(8453);const o={sidebar_position:3,description:"Interact with Move Code"},a="Txs - Generate Transaction",c={},d=[{value:"Description",id:"description",level:2},{value:"Generate-Transaction Command",id:"generate-transaction-command",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"txs---generate-transaction",children:"Txs - Generate Transaction"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Generates a transaction to execute an Entry function on the 0L Network. This command is used to create transactions that call Entry functions of smart contracts deployed on-chain, facilitating direct interaction with public smart contract code."}),"\n",(0,i.jsx)(n.h3,{id:"generate-transaction-command",children:"Generate-Transaction Command"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function"}),": Creates a transaction for interacting with public smart contract functions on the 0L Network."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Syntax"}),": ",(0,i.jsx)(n.code,{children:"libra txs generate-transaction --function-id <FUNCTION_ID> [OPTIONS]"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--function-id <FUNCTION_ID>"}),": The fully qualified identifier of the smart contract function to be invoked. This identifier includes the module address, module name, and function name."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"libra txs generate-transaction --function-id 0xd1281de242839fc939745996882c5fc2::message::set_message --args '42'\n"})}),"\n","This command generates a transaction to invoke the ",(0,i.jsx)(n.code,{children:"set_message"})," function within the ",(0,i.jsx)(n.code,{children:"message"})," module located at address ",(0,i.jsx)(n.code,{children:"0xd1281de242839fc939745996882c5fc2"}),", passing '42' as the argument."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);