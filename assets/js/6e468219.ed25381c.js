"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[2934],{8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>l});var r=o(6540);const s={},i=r.createContext(s);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(i.Provider,{value:n},e.children)}},9293:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"guides/developers/formal-verification","title":"Move Formal Verification","description":"The Move language includes a syntax for annotating code with spec","source":"@site/docs/guides/developers/formal-verification.md","sourceDirName":"guides/developers","slug":"/guides/developers/formal-verification","permalink":"/guides/developers/formal-verification","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/guides/developers/formal-verification.md","tags":[],"version":"current","lastUpdatedAt":1748451224000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Quick Start","permalink":"/guides/developers/dev-quick-start"},"next":{"title":"Governance fixtures","permalink":"/guides/developers/governance-fixtures"}}');var s=o(4848),i=o(8453);const t={},l="Move Formal Verification",a={},c=[{value:"Quick Start",id:"quick-start",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"move-formal-verification",children:"Move Formal Verification"})}),"\n",(0,s.jsxs)(n.p,{children:["The Move language includes a syntax for annotating code with ",(0,s.jsx)(n.code,{children:"spec"}),'\nspecifications which can be "formally verified". The syntax is purpose built for\nMove. The stack behind the verification is based on ',(0,s.jsx)(n.code,{children:"boogie"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"You will need to install many dependencies for the Move test tooling as well as\nboogie system libraries."}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"get the libra cli with standard Move tools"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Compile the ",(0,s.jsx)(n.code,{children:"libra"})," cli app, and have it in your executable PATH."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cargo b --profile cli -p libra\ncp target/cli/libra ~/.cargo/bin\nchmod +x ~/.cargo/bin/libra\n\n# check it runs\nlibra -h\n# this is the subcommand for the formal verification\nlibra move prove -h\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Install the Boogie dependencies"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"dev_setup.sh"})," can be run with these options:"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"-y install or update Move Prover tools: z3, cvc5, dotnet, boogie"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"-p update $HOME/.profile or ./bashrc"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# run the installer\nbash util/dev_setup.sh -yp\n\n# you may need to restart your shell, after env variables are set\n# or .bashrc, or .zshrc\nbash ~/.profile\n"})}),"\n",(0,s.jsx)(n.p,{children:"Whatever terminal shell (or .zshrc) you are using you should check that these variable are exported:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export DOTNET_ROOT="$HOME/.dotnet"\nexport Z3_EXE="$HOME/bin/z3"\nexport CVC5_EXE="$HOME/bin/cvc5"\nexport BOOGIE_EXE="$HOME/.dotnet/tools/boogie"\nexport SOLC_EXE="$HOME/bin/solc"\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Check if it all works\nyou'll be running formal verification specs against ",(0,s.jsx)(n.code,{children:"libra-framework"})," move\nsource."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"So test it on something we know to work"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd framework/libra-framework\n\n# test the guid.move module\nlibra move prove -f guid\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you get a response without errors similar to the message below you are ready to\nstart."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"[INFO] 0.903s build, 2.585s trafo, 0.019s gen, 1.313s verify, total 4.820s\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["check then env vars were set up ",(0,s.jsx)(n.code,{children:"echo $BOOGIE_EXE"})]}),"\n",(0,s.jsxs)(n.li,{children:["check that all the system libraries were installed ",(0,s.jsx)(n.code,{children:"ls $HOME/.dotnet/tools/boogie"})]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"goals",children:"Goals"}),"\n",(0,s.jsx)(n.p,{children:"Formal verification priority for Libra should mainly check that the network does\nnot halt in operations conducted by the VM."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"epoch_boundary.move"}),"\nShould never halt on ",(0,s.jsx)(n.code,{children:"reconfigure()"}),"\nTHough there are many downstream modules and functions from here, the largest\nones being:"]}),"\n",(0,s.jsxs)(n.p,{children:["a. ",(0,s.jsx)(n.code,{children:"stake.move"})]}),"\n",(0,s.jsxs)(n.p,{children:["b. ",(0,s.jsx)(n.code,{children:"proof_of_fee.move"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"coin.move"}),"\na. Transactions by VM should not halt"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"slow_wallet.move"}),"\na. no transactions should bypass the slow wallet tracker. If there is a slow\nwallet struct, a transaction should always alter it.\nb. no account, not even the VM can withdraw above the unlocked limit.\nc. the unlocked limit cannot be larger than the total."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);