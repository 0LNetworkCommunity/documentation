"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[3673],{3963:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"guides/node-operators/validators/yaml-templates/vfn-yaml","title":"VFN YAML file example","description":"~/.libra/vfn.yaml","source":"@site/docs/guides/node-operators/validators/yaml-templates/vfn-yaml.md","sourceDirName":"guides/node-operators/validators/yaml-templates","slug":"/guides/node-operators/validators/yaml-templates/vfn-yaml","permalink":"/guides/node-operators/validators/yaml-templates/vfn-yaml","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/guides/node-operators/validators/yaml-templates/vfn-yaml.md","tags":[],"version":"current","lastUpdatedAt":1748451224000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Validator YAML file example","permalink":"/guides/node-operators/validators/yaml-templates/validator-yaml"},"next":{"title":"Quick Start","permalink":"/guides/developers/dev-quick-start"}}');var o=t(4848),r=t(8453);const i={},l="VFN YAML file example",s={},d=[{value:"<code>~/.libra/vfn.yaml</code>",id:"libravfnyaml",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"vfn-yaml-file-example",children:"VFN YAML file example"})}),"\n",(0,o.jsx)(n.h3,{id:"libravfnyaml",children:(0,o.jsx)(n.code,{children:"~/.libra/vfn.yaml"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"base:\n  role: 'full_node'\n  data_dir: '/home/vfnuser/.libra/data'\n  waypoint:\n    from_file: '/home/vfnuser/.libra/genesis/waypoint.txt'\n\nexecution:\n  genesis_file_location: '/home/vfnuser/.libra/genesis/genesis.blob'\n\nfull_node_networks:\n- network_id:\n    private: 'vfn'\n  listen_address: '/ip4/0.0.0.0/tcp/6181'\n  discovery_method: 'onchain'\n  seeds:\n    1234yourvalidatorpublickey:\n      addresses:\n      - '/ip4/<validator_ip>/tcp/6181/noise-ik/0x1234yourvalidatorpublickey/handshake/0'\n      role: 'Validator'\n- network_id: 'public'\n  listen_address: '/ip4/0.0.0.0/tcp/6182'\n  discovery_method: 'onchain'\n  identity:\n    type: 'from_file'\n    path: '/home/vfnuser/.libra/validator-full-node-identity.yaml'\n\napi:\n  enabled: true\n  address: '0.0.0.0:8080'\n\nmempool:\n  default_failovers: 3\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(6540);const o={},r=a.createContext(o);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);