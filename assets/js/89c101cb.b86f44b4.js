"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[2964],{1428:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"tools/testnet/testnet","title":"Using the Testnet","description":"TL;DR","source":"@site/docs/tools/testnet/testnet.md","sourceDirName":"tools/testnet","slug":"/tools/testnet/","permalink":"/tools/testnet/","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/tools/testnet/testnet.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Testnet","permalink":"/category/testnet"},"next":{"title":"Add Validators To Testnet","permalink":"/tools/testnet/validator-registration"}}');var i=n(4848),o=n(8453);const r={},l="Using the Testnet",c={},a=[{value:"TL;DR",id:"tldr",level:2},{value:"Getting coins to an account",id:"getting-coins-to-an-account",level:2},{value:"Using <code>open-libra-sdk</code> for typescript",id:"using-open-libra-sdk-for-typescript",level:2},{value:"Using <code>libra-cli</code> client",id:"using-libra-cli-client",level:2},{value:"Starting a new testnet",id:"starting-a-new-testnet",level:2},{value:"Docker",id:"docker",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"using-the-testnet",children:"Using the Testnet"})}),"\n",(0,i.jsx)(t.h2,{id:"tldr",children:"TL;DR"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["The API endpoint for the testnet is ",(0,i.jsx)(t.code,{children:"http://testnet.openlibra.io/v1"})]}),"\n",(0,i.jsxs)(t.li,{children:["The Chain ID of the testnet is ",(0,i.jsx)(t.code,{children:"2"}),", on the command line you may ",(0,i.jsx)(t.code,{children:"export MODE_0L=testnet"})," for the tools to pick up this change."]}),"\n",(0,i.jsx)(t.li,{children:"Every week a testnet will be restarted with a clean genesis."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"getting-coins-to-an-account",children:"Getting coins to an account"}),"\n",(0,i.jsx)(t.p,{children:"Testnet does not use a faucet (it uses only production code)."}),"\n",(0,i.jsx)(t.p,{children:"You can use Alice's address to test, or to create new accounts:"}),"\n",(0,i.jsx)(t.p,{children:"address:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"0x87515d94a244235a1433d7117bc0cb154c613c2f4b1e67ca8d98a542ee3f59f5\n"})}),"\n",(0,i.jsx)(t.p,{children:"mnemonic:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"talent sunset lizard pill fame nuclear spy noodle basket okay critic grow sleep legend hurry pitch blanket clerk impose rough degree sock insane purse\n"})}),"\n",(0,i.jsxs)(t.h2,{id:"using-open-libra-sdk-for-typescript",children:["Using ",(0,i.jsx)(t.code,{children:"open-libra-sdk"})," for typescript"]}),"\n",(0,i.jsxs)(t.p,{children:["Simply construct the ",(0,i.jsx)(t.code,{children:"Libra"})," class with the network testnet, and the URL above."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'// Just use a client:\nconst l = new Libra(Network.TESTNET, "http://testnet.openlibra.io/v1")\n\n// Restoring a wallet:\nconst wallet = new LibraWallet("talent sunset lizard pill fame nuclear spy noodle basket okay critic grow sleep legend hurry pitch blanket clerk impose rough degree sock insane purse", Network.TESTNET, "http://testnet.openlibra.io/v1").\n\n'})}),"\n",(0,i.jsxs)(t.h2,{id:"using-libra-cli-client",children:["Using ",(0,i.jsx)(t.code,{children:"libra-cli"})," client"]}),"\n",(0,i.jsxs)(t.p,{children:["This assumes you have build the Rust ",(0,i.jsx)(t.code,{children:"libra"})," tool from source."]}),"\n",(0,i.jsx)(t.p,{children:"When you are initially configuring the cli client you may want to generate a config file for the testnet.\nYou may also add an additional profile to the config (such that you have the mainnet and testnet configs)."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"libra config --chain-name testnet --profile my-testnet init\n"})}),"\n",(0,i.jsx)(t.h2,{id:"starting-a-new-testnet",children:"Starting a new testnet"}),"\n",(0,i.jsx)(t.p,{children:"The libra-cli tool includes a command which generates some pre-set accounts for a three or four node validator set.\nEach of the nodes will use default addresses"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"# on host 1\nlibra ops genesis testnet --me alice\n# on host 2\nlibra ops genesis testnet --me bob\n# ... finally on host 3\nlibra ops genesis testnet --me carol\n"})}),"\n",(0,i.jsx)(t.h3,{id:"docker",children:"Docker"}),"\n",(0,i.jsx)(t.p,{children:'A "testnet in a bottle" exists for development purposes. See the docker compose file here:'}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"https://github.com/0LNetworkCommunity/libra-framework/tree/main/container\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);