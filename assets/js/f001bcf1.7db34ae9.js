"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[8970],{3354:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"guides/node-operators/validators/testnet","title":"Start a Testnet","description":"TL;DR: the libra cli tool has a helper to create all genesis files for a testnet from pre-determined test personas (Alice, Bob, Carol, and Dave).","source":"@site/docs/guides/node-operators/validators/testnet.md","sourceDirName":"guides/node-operators/validators","slug":"/guides/node-operators/validators/testnet","permalink":"/guides/node-operators/validators/testnet","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/guides/node-operators/validators/testnet.md","tags":[],"version":"current","lastUpdatedAt":1748451224000,"frontMatter":{}}');var s=t(4848),o=t(8453);const a={},i="Start a Testnet",d={},l=[{value:"On each host",id:"on-each-host",level:2},{value:"Network addresses",id:"network-addresses",level:2},{value:"Framework MRB",id:"framework-mrb",level:2},{value:"Using mainnet&#39;s current deployed framework",id:"using-mainnets-current-deployed-framework",level:3},{value:"Using bleeding edge framework",id:"using-bleeding-edge-framework",level:3},{value:"After all hosts are configured",id:"after-all-hosts-are-configured",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"start-a-testnet",children:"Start a Testnet"})}),"\n",(0,s.jsxs)(r.p,{children:["TL;DR: the ",(0,s.jsx)(r.code,{children:"libra"})," cli tool has a helper to create all genesis files for a testnet from pre-determined test personas (Alice, Bob, Carol, and Dave)."]}),"\n",(0,s.jsx)(r.p,{children:"Each host needs to present the same genesis information (just network address), and pick one persona."}),"\n",(0,s.jsx)(r.p,{children:"A host can be bare metal, or a docker container."}),"\n",(0,s.jsxs)(r.p,{children:["Requirements: building the ",(0,s.jsx)(r.code,{children:"libra"})," binary, or pulling the docker reference image at ",(0,s.jsx)(r.code,{children:"https://github.com/0LNetworkCommunity/libra-framework/pkgs/container/libra-framework%2Flibra-node"})]}),"\n",(0,s.jsx)(r.h2,{id:"on-each-host",children:"On each host"}),"\n",(0,s.jsxs)(r.p,{children:["Each node should run on their host the setup instructions.\nWARNING: the usual ",(0,s.jsx)(r.code,{children:"$HOME/.libra/"})," data director WILL BE DESTROYED in this process."]}),"\n",(0,s.jsx)(r.p,{children:"Here's an example of setting up a testnet with three hosts separated by the vast ocean of the internet."}),"\n",(0,s.jsx)(r.p,{children:'In this case the first user will be "alice"'}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:" libra ops genesis testnet --me alice \\\n --host-list my.domain.com:6180 \\\n --host-list 1.2.4.5:6180 \\\n --host-list localhost:6182 \\\n --framework-mrb-path <LIBRA_SOURCE>/framework/releases/head.mrb\n"})}),"\n",(0,s.jsx)(r.p,{children:"Next, each other hosts must pick Bob, Carol, (and optionally) Dave."}),"\n",(0,s.jsx)(r.p,{children:"NOTE: you need three (up to Carol) or optionally four (Dave) to start a testnet. Trying for example five hosts will fail since there are only four predetermined personas. Other nodes can join testnet after genesis."}),"\n",(0,s.jsx)(r.h2,{id:"network-addresses",children:"Network addresses"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"--host-list"})," argument can be a domain, IPv4, or IPv6 address. You need to add a PORT. In production for validator networking this is ",(0,s.jsx)(r.code,{children:"6180"}),". If you are doing docker voodoo keep this in mind and check the ",(0,s.jsx)(r.code,{children:"validator.yaml"})," on each host to see if they are using expected ports."]}),"\n",(0,s.jsx)(r.h2,{id:"framework-mrb",children:"Framework MRB"}),"\n",(0,s.jsx)(r.p,{children:"This fils is the binary of the Move code for the system smart contracts. This is needed to produce the genesis transaction."}),"\n",(0,s.jsx)(r.h3,{id:"using-mainnets-current-deployed-framework",children:"Using mainnet's current deployed framework"}),"\n",(0,s.jsxs)(r.p,{children:["You can start a testnet with any of the historical ",(0,s.jsx)(r.code,{children:".mrb"})," files. We archive these in the libra-framework source.\nFor example, mainnet is here: ",(0,s.jsx)(r.code,{children:"https://github.com/0LNetworkCommunity/libra-framework/blob/main/framework/releases/mainnet.mrb"})]}),"\n",(0,s.jsx)(r.h3,{id:"using-bleeding-edge-framework",children:"Using bleeding edge framework"}),"\n",(0,s.jsxs)(r.p,{children:["You will want to use a ",(0,s.jsx)(r.code,{children:"head.mrb"})," file build from recent source"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"cd <LIBRA SOURCE>/framework\nlibra move framework release\n// will produce a file at framework/releases/head.mrb\n"})}),"\n",(0,s.jsx)(r.h2,{id:"after-all-hosts-are-configured",children:"After all hosts are configured"}),"\n",(0,s.jsx)(r.p,{children:"Just start the node:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"libra node\n\n"})}),"\n",(0,s.jsx)(r.h1,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Can your nodes connect to each other on the internet?"}),"\n",(0,s.jsxs)(r.li,{children:["Do the ports in the ",(0,s.jsx)(r.code,{children:"validator.yaml"})," file match on all nodes?"]}),"\n",(0,s.jsx)(r.li,{children:"Are the ports open on each host?"}),"\n",(0,s.jsx)(r.li,{children:"(Docker) are you extra sure the ports are doing what you think?"}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var n=t(6540);const s={},o=n.createContext(s);function a(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);