"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[5135],{7616:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>O,contentTitle:()=>T,default:()=>R,frontMatter:()=>L,metadata:()=>l,toc:()=>P});const l=JSON.parse('{"id":"getting-started/install-open-libra-cli","title":"Install Open Libra CLI","description":"This guide will walk you through installing the Open Libra CLI by building it from source. The CLI provides essential tools for interacting with the Open Libra network.","source":"@site/docs/getting-started/install-open-libra-cli.md","sourceDirName":"getting-started","slug":"/getting-started/install-open-libra-cli","permalink":"/getting-started/install-open-libra-cli","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/getting-started/install-open-libra-cli.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Home","permalink":"/"},"next":{"title":"Install Wallet","permalink":"/getting-started/install-wallet"}}');var i=s(4848),r=s(8453),t=s(6540),a=s(4164),o=s(5627),c=s(6347),d=s(372),u=s(604),h=s(1861),p=s(8749);function g(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return g(e).map((({props:{value:e,label:n,attributes:s,default:l}})=>({value:e,label:n,attributes:s,default:l})))}(s);return function(e){const n=(0,h.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function x({value:e,tabValues:n}){return n.some((n=>n.value===e))}function b({queryString:e=!1,groupId:n}){const s=(0,c.W6)(),l=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(l),(0,t.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(s.location.search);n.set(l,e),s.replace({...s.location,search:n.toString()})}),[l,s])]}function j(e){const{defaultValue:n,queryString:s=!1,groupId:l}=e,i=m(e),[r,a]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[o,c]=b({queryString:s,groupId:l}),[u,h]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,l]=(0,p.Dv)(n);return[s,(0,t.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:l}),g=(()=>{const e=o??u;return x({value:e,tabValues:i})?e:null})();(0,d.A)((()=>{g&&a(g)}),[g]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!x({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),c(e),h(e)}),[c,h,i]),tabValues:i}}var f=s(9136);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y({className:e,block:n,selectedValue:s,selectValue:l,tabValues:r}){const t=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const n=e.currentTarget,i=t.indexOf(n),a=r[i].value;a!==s&&(c(n),l(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=t.indexOf(e.currentTarget)+1;n=t[s]??t[0];break}case"ArrowLeft":{const s=t.indexOf(e.currentTarget)-1;n=t[s]??t[t.length-1];break}}n?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:r.map((({value:e,label:n,attributes:l})=>(0,i.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{t.push(e)},onKeyDown:u,onClick:d,...l,className:(0,a.A)("tabs__item",v.tabItem,l?.className,{"tabs__item--active":s===e}),children:n??e},e)))})}function w({lazy:e,children:n,selectedValue:s}){const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=l.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function I(e){const n=j(e);return(0,i.jsxs)("div",{className:(0,a.A)("tabs-container",v.tabList),children:[(0,i.jsx)(y,{...n,...e}),(0,i.jsx)(w,{...n,...e})]})}function C(e){const n=(0,f.A)();return(0,i.jsx)(I,{...e,children:g(e.children)},String(n))}const S={tabItem:"tabItem_Ymn6"};function k({children:e,hidden:n,className:s}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(S.tabItem,s),hidden:n,children:e})}const L={},T="Install Open Libra CLI",O={},P=[{value:"Installation Overview",id:"installation-overview",level:2},{value:"Prerequisites Setup",id:"prerequisites-setup",level:2},{value:"System-Specific Setup",id:"system-specific-setup",level:2},{value:"System Dependencies",id:"system-dependencies",level:4},{value:"Rust &amp; Cargo Installation",id:"rust--cargo-installation",level:4},{value:"System Dependencies",id:"system-dependencies-1",level:4},{value:"Rust &amp; Cargo Installation",id:"rust--cargo-installation-1",level:4},{value:"System Dependencies",id:"system-dependencies-2",level:4},{value:"Rust &amp; Cargo Installation",id:"rust--cargo-installation-2",level:4},{value:"Build &amp; Install the CLI",id:"build--install-the-cli",level:2},{value:"1. Clone the Repository",id:"1-clone-the-repository",level:3},{value:"2. Build the CLI",id:"2-build-the-cli",level:3},{value:"3. Install the Binary",id:"3-install-the-binary",level:3},{value:"4. Update Your PATH (if needed)",id:"4-update-your-path-if-needed",level:3},{value:"Verify Installation",id:"verify-installation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Next Steps",id:"next-steps",level:2}];function N(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"install-open-libra-cli",children:"Install Open Libra CLI"})}),"\n",(0,i.jsxs)(n.p,{children:["This guide will walk you through installing the ",(0,i.jsx)(n.strong,{children:"Open Libra CLI"})," by building it from source. The CLI provides essential tools for interacting with the Open Libra network."]}),"\n",(0,i.jsx)(n.h2,{id:"installation-overview",children:"Installation Overview"}),"\n",(0,i.jsx)(n.p,{children:"The installation process involves these main steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prerequisites Setup"})," - Install required system dependencies and Rust toolchain for your operating system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clone Repository"})," - Download the Open Libra Framework source code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Build CLI"})," - Compile the CLI in release mode for optimal performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Install Binaries"})," - Copy the built binaries to your system PATH"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify Installation"})," - Confirm the CLI is working correctly"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites-setup",children:"Prerequisites Setup"}),"\n",(0,i.jsx)(n.p,{children:"Before beginning, ensure you have the following tools installed on your system:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rust & Cargo"})," - The Rust programming language and its package manager"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Git"})," - Version control system for cloning the repository"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"cURL"})," - Command-line tool for downloading files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C/C++ toolchain"})," - Compiler and build tools"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenSSL headers"})," - Cryptographic library headers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CMake"})," - Cross-platform build system"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"system-specific-setup",children:"System-Specific Setup"}),"\n",(0,i.jsx)(n.p,{children:"Select your operating system for detailed installation instructions of all the prerequisites:"}),"\n",(0,i.jsxs)(C,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],children:[(0,i.jsxs)(k,{value:"linux",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Tested on Ubuntu 22.04 LTS and compatible distributions."})}),(0,i.jsx)(n.h4,{id:"system-dependencies",children:"System Dependencies"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Update package lists\nsudo apt update\n\n# Install required packages\nsudo apt install -y \\\n    build-essential \\\n    clang \\\n    llvm \\\n    lld \\\n    cmake \\\n    git \\\n    curl \\\n    pkg-config \\\n    libssl-dev \\\n    libgmp-dev \\\n    libpq-dev\n"})}),(0,i.jsx)(n.h4,{id:"rust--cargo-installation",children:"Rust & Cargo Installation"}),(0,i.jsxs)(n.p,{children:["The recommended installation method is ",(0,i.jsx)(n.code,{children:"rustup"}),", which manages Rust toolchains:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Download and install Rust\ncurl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y\n\n# Activate the toolchain in your current shell\nsource \"$HOME/.cargo/env\"\n\n# Verify the installation\nrustc --version && cargo --version\n"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"To update an existing Rust installation:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rustup update stable\n"})})]}),(0,i.jsxs)(k,{value:"mac",children:[(0,i.jsx)(n.h4,{id:"system-dependencies-1",children:"System Dependencies"}),(0,i.jsxs)(n.p,{children:["Using ",(0,i.jsx)(n.a,{href:"https://brew.sh/",children:"Homebrew"})," (recommended):"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install required packages\nbrew install git curl cmake llvm pkg-config openssl@3 gmp\n\n# Configure OpenSSL for pkg-config\necho 'export PKG_CONFIG_PATH=\"/opt/homebrew/opt/openssl@3/lib/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.zprofile\n\n# Apply the changes (restart terminal or run one of these)\nsource ~/.zshrc    # if using zsh\nsource ~/.bash_profile  # if using bash  \nsource ~/.profile  # for other shells\n"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Alternative: Using MacPorts"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo port install cmake llvm git curl pkgconfig openssl3 gmp\n"})}),(0,i.jsx)(n.h4,{id:"rust--cargo-installation-1",children:"Rust & Cargo Installation"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Download and install Rust\ncurl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y\n\n# Activate the toolchain in your current shell\nsource \"$HOME/.cargo/env\"\n\n# Verify the installation\nrustc --version && cargo --version\n"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"To update an existing Rust installation:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rustup update stable\n"})})]}),(0,i.jsxs)(k,{value:"windows",children:[(0,i.jsx)(n.h4,{id:"system-dependencies-2",children:"System Dependencies"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Option 1: Using Chocolatey (Recommended)"})}),(0,i.jsxs)(n.p,{children:["First, install ",(0,i.jsx)(n.a,{href:"https://chocolatey.org/install",children:"Chocolatey"})," if you haven't already, then:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'# Install required packages\nchoco install git cmake llvm rust-ms\n\n# Install Visual Studio Build Tools (required for compilation)\nchoco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"\n'})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Option 2: Manual Installation"})}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.a,{href:"https://git-scm.com/download/win",children:"Git for Windows"})]}),"\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.a,{href:"https://cmake.org/download/",children:"CMake"})]}),"\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.a,{href:"https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2022",children:"Visual Studio Build Tools"})]}),"\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.a,{href:"https://releases.llvm.org/download.html",children:"LLVM"})]}),"\n"]}),(0,i.jsx)(n.h4,{id:"rust--cargo-installation-2",children:"Rust & Cargo Installation"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'# Download and install Rust (run in PowerShell)\nInvoke-WebRequest -Uri https://win.rustup.rs/x86_64 -OutFile rustup-init.exe\n.\\rustup-init.exe --default-toolchain stable -y\n\n# Restart your terminal or run:\n$env:PATH += ";$env:USERPROFILE\\.cargo\\bin"\n\n# Verify the installation\nrustc --version; cargo --version\n'})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"To update an existing Rust installation:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"rustup update stable\n"})})]})]}),"\n",(0,i.jsx)(n.h2,{id:"build--install-the-cli",children:"Build & Install the CLI"}),"\n",(0,i.jsx)(n.p,{children:"Once you have all prerequisites installed, follow these steps to build and install the Open Libra CLI:"}),"\n",(0,i.jsx)(n.h3,{id:"1-clone-the-repository",children:"1. Clone the Repository"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/0LNetworkCommunity/libra-framework.git\ncd libra-framework\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-build-the-cli",children:"2. Build the CLI"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Build in release mode for optimal performance\ncargo build --release -p libra\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," The build process may take several minutes depending on your system's performance."]}),"\n",(0,i.jsx)(n.h3,{id:"3-install-the-binary",children:"3. Install the Binary"}),"\n",(0,i.jsxs)(C,{groupId:"install-methods",defaultValue:"cargo-install",values:[{label:"Using cargo install (Recommended)",value:"cargo-install"},{label:"Manual installation",value:"manual-install"}],children:[(0,i.jsx)(k,{value:"cargo-install",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install directly using cargo (recommended)\ncargo install --path tools/libra --force\n"})})}),(0,i.jsxs)(k,{value:"manual-install",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Copy the binary to your local bin directory\ninstall -m 755 target/release/libra "$HOME/.cargo/bin"\n'})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"On Windows (PowerShell):"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'# Create the directory if it doesn\'t exist\nNew-Item -ItemType Directory -Force -Path "$env:USERPROFILE\\.cargo\\bin"\n\n# Copy the binary\nCopy-Item "target\\release\\libra.exe" -Destination "$env:USERPROFILE\\.cargo\\bin"\n'})})]})]}),"\n",(0,i.jsx)(n.h3,{id:"4-update-your-path-if-needed",children:"4. Update Your PATH (if needed)"}),"\n",(0,i.jsxs)(n.p,{children:["The PATH update is only necessary if you used the manual installation method and chose to install to ",(0,i.jsx)(n.code,{children:"$HOME/.cargo/bin"}),". If you used ",(0,i.jsx)(n.code,{children:"cargo install"})," or installed to ",(0,i.jsx)(n.code,{children:"/usr/local/bin"}),", you can skip this step."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Linux/macOS:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Add to appropriate shell configuration file\nif [[ "$SHELL" == *"zsh"* ]]; then\n    echo \'export PATH="$HOME/.cargo/bin:$PATH"\' >> ~/.zshrc && source ~/.zshrc\nelif [[ "$SHELL" == *"bash"* ]]; then\n    echo \'export PATH="$HOME/.cargo/bin:$PATH"\' >> ~/.bashrc && source ~/.bashrc\nelse\n    echo \'export PATH="$HOME/.cargo/bin:$PATH"\' >> ~/.profile && source ~/.profile\nfi\n\n# Alternative: Check manually and add to your preferred shell config\n# echo $SHELL  # to see which shell you\'re using\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Windows (PowerShell):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'# Add to PATH permanently\n$oldPath = [Environment]::GetEnvironmentVariable("PATH", "User")\nif ($oldPath -notlike "*$env:USERPROFILE\\.cargo\\bin*") {\n    [Environment]::SetEnvironmentVariable("PATH", "$oldPath;$env:USERPROFILE\\.cargo\\bin", "User")\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"verify-installation",children:"Verify Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check that the CLI is properly installed\nlibra --version\n\n# View available commands\nlibra --help\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Build fails with OpenSSL errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Linux:"})," Ensure ",(0,i.jsx)(n.code,{children:"libssl-dev"})," is installed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"macOS:"})," Make sure PKG_CONFIG_PATH includes OpenSSL path"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Windows:"})," Install OpenSSL or use the Windows-specific Rust toolchain"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Permission denied when installing:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure you have write permissions to ",(0,i.jsx)(n.code,{children:"$HOME/.cargo/bin"})]}),"\n",(0,i.jsx)(n.li,{children:"On Windows, run PowerShell as Administrator if needed"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command not found after installation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Verify ",(0,i.jsx)(n.code,{children:"$HOME/.cargo/bin"})," is in your PATH"]}),"\n",(0,i.jsx)(n.li,{children:"Restart your terminal or source your shell configuration"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compilation takes too long:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The initial build can take 10-30 minutes depending on your system"}),"\n",(0,i.jsxs)(n.li,{children:["Consider using ",(0,i.jsx)(n.code,{children:"cargo build --release -j $(nproc)"})," to use all CPU cores"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,i.jsx)(n.p,{children:"If you encounter issues not covered here:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Check the ",(0,i.jsx)(n.a,{href:"https://github.com/0LNetworkCommunity/libra-framework/issues",children:"project issues"})," on GitHub"]}),"\n",(0,i.jsx)(n.li,{children:"Ensure you're using the latest version of Rust and dependencies"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"After successful installation:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"libra --help"})," to explore available commands"]}),"\n",(0,i.jsx)(n.li,{children:"Join the Open Libra contributors community on Discord for support and updates"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Need pre-built binaries?"})," Visit the ",(0,i.jsx)(n.a,{href:"https://github.com/0LNetworkCommunity/libra-framework/releases",children:"releases page"})," for downloadable binaries (when available)."]})]})}function R(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(N,{...e})}):N(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var l=s(6540);const i={},r=l.createContext(i);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);