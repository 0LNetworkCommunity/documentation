"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[3085],{3520:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"references/tools/cli-tools/txs/user","title":"User Transactions","description":"Generate transactions for V8 user vouches.","source":"@site/docs/references/tools/cli-tools/txs/user.md","sourceDirName":"references/tools/cli-tools/txs","slug":"/references/tools/cli-tools/txs/user","permalink":"/references/tools/cli-tools/txs/user","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/references/tools/cli-tools/txs/user.md","tags":[],"version":"current","lastUpdatedAt":1748451224000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Upgrade VM Libraries","permalink":"/references/tools/cli-tools/txs/upgrade"},"next":{"title":"Validator","permalink":"/references/tools/cli-tools/txs/validator"}}');var t=n(4848),a=n(8453);const o={},i="User Transactions",c={},d=[{value:"Assert that an address has re-joined the chain",id:"assert-that-an-address-has-re-joined-the-chain",level:2},{value:"Vouch for another address",id:"vouch-for-another-address",level:2},{value:"View vouch status",id:"view-vouch-status",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"user-transactions",children:"User Transactions"})}),"\n",(0,t.jsx)(s.p,{children:"Generate transactions for V8 user vouches."}),"\n",(0,t.jsx)(s.h2,{id:"assert-that-an-address-has-re-joined-the-chain",children:"Assert that an address has re-joined the chain"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"libra txs user re-join\n"})}),"\n",(0,t.jsx)(s.h2,{id:"vouch-for-another-address",children:"Vouch for another address"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"libra txs user vouch --vouch-for=<SOME ADDRESS>\n"})}),"\n",(0,t.jsx)(s.h2,{id:"view-vouch-status",children:"View vouch status"}),"\n",(0,t.jsx)(s.p,{children:"View how many vouches an address has to give:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'libra query view --function-id 0x1::vouch_limits::get_vouch_limit --args <SOME_ADDRESS>\n{\n  "body": [\n    "1"        # <--- This is the number of vouches available\n  ]\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:"View vouch score for an address:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'libra query view --function-id 0x1::page_rank_lazy::get_cached_score --args <SOME_ADDRESS>\n{\n  "body": [\n    "0"         # <--- This is the number of vouches received\n  ]\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:"View founder status for an address:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'libra query view --function-id 0x1::founder::is_founder --args <SOME_ADDRESS>\n{\n  "body": [\n    true         # <--- This means this address is a founder\n  ]\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:"View V8 account authorization status:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'libra query view --function-id 0x1::reauthorization::is_v8_authorized --args <SOME_ADDRESS>\n{\n  "body": [\n    true         # <--- This means this address is a authorized\n  ]\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var r=n(6540);const t={},a=r.createContext(t);function o(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);