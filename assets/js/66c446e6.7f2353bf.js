"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[1213],{652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"tools/cli-tools/txs/generate-transaction","title":"generate-transaction","description":"Interact with Move Code","source":"@site/docs/tools/cli-tools/txs/generate-transaction.md","sourceDirName":"tools/cli-tools/txs","slug":"/tools/cli-tools/txs/generate-transaction","permalink":"/tools/cli-tools/txs/generate-transaction","draft":false,"unlisted":false,"editUrl":"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/tools/cli-tools/txs/generate-transaction.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"Interact with Move Code"},"sidebar":"tutorialSidebar","previous":{"title":"wallet","permalink":"/tools/cli-tools/wallet"},"next":{"title":"transfer","permalink":"/tools/cli-tools/txs/transfer"}}');var s=n(4848),i=n(8453);const r={sidebar_position:3,description:"Interact with Move Code"},a="generate-transaction",c={},l=[{value:"Description",id:"description",level:2},{value:"Generate-Transaction Command",id:"generate-transaction-command",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"generate-transaction",children:"generate-transaction"})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Generates a transaction to execute an Entry function on the 0L Network. This command is used to create transactions that call Entry functions of smart contracts deployed on-chain, facilitating direct interaction with public smart contract code."}),"\n",(0,s.jsx)(t.h3,{id:"generate-transaction-command",children:"Generate-Transaction Command"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Function"}),": Creates a transaction for interacting with public smart contract functions on the 0L Network."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Syntax"}),": ",(0,s.jsx)(t.code,{children:"libra txs generate-transaction --function-id <FUNCTION_ID> [OPTIONS]"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Parameters"}),":","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"--function-id <FUNCTION_ID>"}),": The fully qualified identifier of the smart contract function to be invoked. This identifier includes the module address, module name, and function name."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Example"}),":","\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"libra txs generate-transaction --function-id 0xd1281de242839fc939745996882c5fc2::message::set_message --args '42'\n"})}),"\n","This command generates a transaction to invoke the ",(0,s.jsx)(t.code,{children:"set_message"})," function within the ",(0,s.jsx)(t.code,{children:"message"})," module located at address ",(0,s.jsx)(t.code,{children:"0xd1281de242839fc939745996882c5fc2"}),", passing '42' as the argument."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);